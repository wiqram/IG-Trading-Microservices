// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: gmailapi/gmailapi.proto

package gmailapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//The request containing any user identifier, the labelname to monitor and the topicname to subscribe to
type SubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailId   string `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	LabelName string `protobuf:"bytes,2,opt,name=labelName,proto3" json:"labelName,omitempty"`
	TopicName string `protobuf:"bytes,3,opt,name=topicName,proto3" json:"topicName,omitempty"`
	Duration  int32  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SubscriptionRequest) Reset() {
	*x = SubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionRequest) ProtoMessage() {}

func (x *SubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionRequest.ProtoReflect.Descriptor instead.
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionRequest) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *SubscriptionRequest) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *SubscriptionRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *SubscriptionRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

//response containing transId and historyid of gmail watch response
type SubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	HistoryId     string `protobuf:"bytes,2,opt,name=historyId,proto3" json:"historyId,omitempty"`
}

func (x *SubscriptionResponse) Reset() {
	*x = SubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionResponse) ProtoMessage() {}

func (x *SubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionResponse.ProtoReflect.Descriptor instead.
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{1}
}

func (x *SubscriptionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *SubscriptionResponse) GetHistoryId() string {
	if x != nil {
		return x.HistoryId
	}
	return ""
}

// OTCOrderRequest - request struct for placing orders
type OTCOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epic                  string  `protobuf:"bytes,1,opt,name=epic,proto3" json:"epic,omitempty"`
	Level                 string  `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	ForceOpen             bool    `protobuf:"varint,3,opt,name=forceOpen,proto3" json:"forceOpen,omitempty"`
	OrderType             string  `protobuf:"bytes,4,opt,name=orderType,proto3" json:"orderType,omitempty"`
	CurrencyCode          string  `protobuf:"bytes,5,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	Direction             string  `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"` // "BUY" or "SELL"
	Expiry                string  `protobuf:"bytes,7,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Size                  float32 `protobuf:"fixed32,8,opt,name=size,proto3" json:"size,omitempty"`
	StopDistance          string  `protobuf:"bytes,9,opt,name=stopDistance,proto3" json:"stopDistance,omitempty"`    // Pips
	StopLevel             string  `protobuf:"bytes,10,opt,name=stopLevel,proto3" json:"stopLevel,omitempty"`         // Pips
	LimitDistance         string  `protobuf:"bytes,11,opt,name=limitDistance,proto3" json:"limitDistance,omitempty"` // Pips
	LimitLevel            string  `protobuf:"bytes,12,opt,name=limitLevel,proto3" json:"limitLevel,omitempty"`       // Pips
	QuoteId               string  `protobuf:"bytes,13,opt,name=quoteId,proto3" json:"quoteId,omitempty"`
	TimeInForce           string  `protobuf:"bytes,14,opt,name=timeInForce,proto3" json:"timeInForce,omitempty"` // "EXECUTE_AND_ELIMINATE" or "FILL_OR_KILL"
	TrailingStop          bool    `protobuf:"varint,15,opt,name=trailingStop,proto3" json:"trailingStop,omitempty"`
	TrailingStopIncrement string  `protobuf:"bytes,16,opt,name=trailingStopIncrement,proto3" json:"trailingStopIncrement,omitempty"`
	GuaranteedStop        bool    `protobuf:"varint,17,opt,name=guaranteedStop,proto3" json:"guaranteedStop,omitempty"`
	DealReference         string  `protobuf:"bytes,19,opt,name=dealReference,proto3" json:"dealReference,omitempty"`
}

func (x *OTCOrderRequest) Reset() {
	*x = OTCOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTCOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTCOrderRequest) ProtoMessage() {}

func (x *OTCOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTCOrderRequest.ProtoReflect.Descriptor instead.
func (*OTCOrderRequest) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{2}
}

func (x *OTCOrderRequest) GetEpic() string {
	if x != nil {
		return x.Epic
	}
	return ""
}

func (x *OTCOrderRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *OTCOrderRequest) GetForceOpen() bool {
	if x != nil {
		return x.ForceOpen
	}
	return false
}

func (x *OTCOrderRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OTCOrderRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *OTCOrderRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *OTCOrderRequest) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *OTCOrderRequest) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OTCOrderRequest) GetStopDistance() string {
	if x != nil {
		return x.StopDistance
	}
	return ""
}

func (x *OTCOrderRequest) GetStopLevel() string {
	if x != nil {
		return x.StopLevel
	}
	return ""
}

func (x *OTCOrderRequest) GetLimitDistance() string {
	if x != nil {
		return x.LimitDistance
	}
	return ""
}

func (x *OTCOrderRequest) GetLimitLevel() string {
	if x != nil {
		return x.LimitLevel
	}
	return ""
}

func (x *OTCOrderRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

func (x *OTCOrderRequest) GetTimeInForce() string {
	if x != nil {
		return x.TimeInForce
	}
	return ""
}

func (x *OTCOrderRequest) GetTrailingStop() bool {
	if x != nil {
		return x.TrailingStop
	}
	return false
}

func (x *OTCOrderRequest) GetTrailingStopIncrement() string {
	if x != nil {
		return x.TrailingStopIncrement
	}
	return ""
}

func (x *OTCOrderRequest) GetGuaranteedStop() bool {
	if x != nil {
		return x.GuaranteedStop
	}
	return false
}

func (x *OTCOrderRequest) GetDealReference() string {
	if x != nil {
		return x.DealReference
	}
	return ""
}

type OTCOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DealRef string `protobuf:"bytes,1,opt,name=dealRef,proto3" json:"dealRef,omitempty"`
}

func (x *OTCOrderResponse) Reset() {
	*x = OTCOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTCOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTCOrderResponse) ProtoMessage() {}

func (x *OTCOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTCOrderResponse.ProtoReflect.Descriptor instead.
func (*OTCOrderResponse) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{3}
}

func (x *OTCOrderResponse) GetDealRef() string {
	if x != nil {
		return x.DealRef
	}
	return ""
}

// OTCDealConfirmation - Deal confirmation
type ConfirmationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DealStatus     string  `protobuf:"bytes,2,opt,name=dealStatus,proto3" json:"dealStatus,omitempty"` // "ACCEPTED"
	Profit         float32 `protobuf:"fixed32,3,opt,name=profit,proto3" json:"profit,omitempty"`
	ProfitCurrency string  `protobuf:"bytes,4,opt,name=profitCurrency,proto3" json:"profitCurrency,omitempty"`
	Status         string  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // "OPEN"
	Reason         string  `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Level          float32 `protobuf:"fixed32,7,opt,name=level,proto3" json:"level,omitempty"` // Buy price
}

func (x *ConfirmationResponse) Reset() {
	*x = ConfirmationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmationResponse) ProtoMessage() {}

func (x *ConfirmationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmationResponse.ProtoReflect.Descriptor instead.
func (*ConfirmationResponse) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{4}
}

func (x *ConfirmationResponse) GetDealStatus() string {
	if x != nil {
		return x.DealStatus
	}
	return ""
}

func (x *ConfirmationResponse) GetProfit() float32 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *ConfirmationResponse) GetProfitCurrency() string {
	if x != nil {
		return x.ProfitCurrency
	}
	return ""
}

func (x *ConfirmationResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ConfirmationResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ConfirmationResponse) GetLevel() float32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// PositionsResponse - Response from positions endpoint
type PositionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Positions []*Positions `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *PositionsResponse) Reset() {
	*x = PositionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionsResponse) ProtoMessage() {}

func (x *PositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionsResponse.ProtoReflect.Descriptor instead.
func (*PositionsResponse) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{5}
}

func (x *PositionsResponse) GetPositions() []*Positions {
	if x != nil {
		return x.Positions
	}
	return nil
}

// Position - part of PositionsResponse
type Positions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketData *MarketData `protobuf:"bytes,1,opt,name=marketData,proto3" json:"marketData,omitempty"`
	Position   *Position   `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Positions) Reset() {
	*x = Positions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Positions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Positions) ProtoMessage() {}

func (x *Positions) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Positions.ProtoReflect.Descriptor instead.
func (*Positions) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{6}
}

func (x *Positions) GetMarketData() *MarketData {
	if x != nil {
		return x.MarketData
	}
	return nil
}

func (x *Positions) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// Position - part of PositionsResponse
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractSize         float32 `protobuf:"fixed32,1,opt,name=contractSize,proto3" json:"contractSize,omitempty"`
	ControlledRisk       bool    `protobuf:"varint,2,opt,name=controlledRisk,proto3" json:"controlledRisk,omitempty"`
	CreatedDate          string  `protobuf:"bytes,3,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	CreatedDateUTC       string  `protobuf:"bytes,4,opt,name=createdDateUTC,proto3" json:"createdDateUTC,omitempty"`
	Currency             string  `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	DealID               string  `protobuf:"bytes,6,opt,name=dealID,proto3" json:"dealID,omitempty"`
	DealReference        string  `protobuf:"bytes,7,opt,name=dealReference,proto3" json:"dealReference,omitempty"`
	Direction            string  `protobuf:"bytes,8,opt,name=direction,proto3" json:"direction,omitempty"`
	Level                float32 `protobuf:"fixed32,9,opt,name=level,proto3" json:"level,omitempty"`
	LimitLevel           float32 `protobuf:"fixed32,10,opt,name=limitLevel,proto3" json:"limitLevel,omitempty"`
	Size                 float32 `protobuf:"fixed32,11,opt,name=size,proto3" json:"size,omitempty"`
	StopLevel            float32 `protobuf:"fixed32,12,opt,name=stopLevel,proto3" json:"stopLevel,omitempty"`
	TrailingStep         float32 `protobuf:"fixed32,13,opt,name=trailingStep,proto3" json:"trailingStep,omitempty"`
	TrailingStopDistance float32 `protobuf:"fixed32,14,opt,name=trailingStopDistance,proto3" json:"trailingStopDistance,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{7}
}

func (x *Position) GetContractSize() float32 {
	if x != nil {
		return x.ContractSize
	}
	return 0
}

func (x *Position) GetControlledRisk() bool {
	if x != nil {
		return x.ControlledRisk
	}
	return false
}

func (x *Position) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

func (x *Position) GetCreatedDateUTC() string {
	if x != nil {
		return x.CreatedDateUTC
	}
	return ""
}

func (x *Position) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Position) GetDealID() string {
	if x != nil {
		return x.DealID
	}
	return ""
}

func (x *Position) GetDealReference() string {
	if x != nil {
		return x.DealReference
	}
	return ""
}

func (x *Position) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *Position) GetLevel() float32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Position) GetLimitLevel() float32 {
	if x != nil {
		return x.LimitLevel
	}
	return 0
}

func (x *Position) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Position) GetStopLevel() float32 {
	if x != nil {
		return x.StopLevel
	}
	return 0
}

func (x *Position) GetTrailingStep() float32 {
	if x != nil {
		return x.TrailingStep
	}
	return 0
}

func (x *Position) GetTrailingStopDistance() float32 {
	if x != nil {
		return x.TrailingStopDistance
	}
	return 0
}

// Markets - Response from positions endpoint
type MarketSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketData []*MarketData `protobuf:"bytes,1,rep,name=marketData,proto3" json:"marketData,omitempty"`
}

func (x *MarketSearchResponse) Reset() {
	*x = MarketSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketSearchResponse) ProtoMessage() {}

func (x *MarketSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketSearchResponse.ProtoReflect.Descriptor instead.
func (*MarketSearchResponse) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{8}
}

func (x *MarketSearchResponse) GetMarketData() []*MarketData {
	if x != nil {
		return x.MarketData
	}
	return nil
}

// MarketData - Subset of OTCWorkingOrder
type MarketData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid                      float32 `protobuf:"fixed32,1,opt,name=bid,proto3" json:"bid,omitempty"`
	DelayTime                int64   `protobuf:"varint,2,opt,name=delayTime,proto3" json:"delayTime,omitempty"`
	Epic                     string  `protobuf:"bytes,3,opt,name=epic,proto3" json:"epic,omitempty"`
	ExchangeId               string  `protobuf:"bytes,4,opt,name=exchangeId,proto3" json:"exchangeId,omitempty"`
	Expiry                   string  `protobuf:"bytes,5,opt,name=expiry,proto3" json:"expiry,omitempty"`
	High                     float32 `protobuf:"fixed32,6,opt,name=high,proto3" json:"high,omitempty"`
	InstrumentName           string  `protobuf:"bytes,7,opt,name=instrumentName,proto3" json:"instrumentName,omitempty"`
	InstrumentType           string  `protobuf:"bytes,8,opt,name=instrumentType,proto3" json:"instrumentType,omitempty"`
	LotSize                  float32 `protobuf:"fixed32,9,opt,name=lotSize,proto3" json:"lotSize,omitempty"`
	Low                      float32 `protobuf:"fixed32,10,opt,name=low,proto3" json:"low,omitempty"`
	MarketStatus             string  `protobuf:"bytes,11,opt,name=marketStatus,proto3" json:"marketStatus,omitempty"`
	NetChange                float32 `protobuf:"fixed32,12,opt,name=netChange,proto3" json:"netChange,omitempty"`
	Offer                    float32 `protobuf:"fixed32,13,opt,name=offer,proto3" json:"offer,omitempty"`
	PercentageChange         float32 `protobuf:"fixed32,14,opt,name=percentageChange,proto3" json:"percentageChange,omitempty"`
	ScalingFactor            int32   `protobuf:"varint,15,opt,name=scalingFactor,proto3" json:"scalingFactor,omitempty"`
	StreamingPricesAvailable bool    `protobuf:"varint,16,opt,name=streamingPricesAvailable,proto3" json:"streamingPricesAvailable,omitempty"`
	UpdateTime               string  `protobuf:"bytes,17,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	UpdateTimeUTC            string  `protobuf:"bytes,18,opt,name=updateTimeUTC,proto3" json:"updateTimeUTC,omitempty"`
}

func (x *MarketData) Reset() {
	*x = MarketData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketData) ProtoMessage() {}

func (x *MarketData) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketData.ProtoReflect.Descriptor instead.
func (*MarketData) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{9}
}

func (x *MarketData) GetBid() float32 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *MarketData) GetDelayTime() int64 {
	if x != nil {
		return x.DelayTime
	}
	return 0
}

func (x *MarketData) GetEpic() string {
	if x != nil {
		return x.Epic
	}
	return ""
}

func (x *MarketData) GetExchangeId() string {
	if x != nil {
		return x.ExchangeId
	}
	return ""
}

func (x *MarketData) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *MarketData) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *MarketData) GetInstrumentName() string {
	if x != nil {
		return x.InstrumentName
	}
	return ""
}

func (x *MarketData) GetInstrumentType() string {
	if x != nil {
		return x.InstrumentType
	}
	return ""
}

func (x *MarketData) GetLotSize() float32 {
	if x != nil {
		return x.LotSize
	}
	return 0
}

func (x *MarketData) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *MarketData) GetMarketStatus() string {
	if x != nil {
		return x.MarketStatus
	}
	return ""
}

func (x *MarketData) GetNetChange() float32 {
	if x != nil {
		return x.NetChange
	}
	return 0
}

func (x *MarketData) GetOffer() float32 {
	if x != nil {
		return x.Offer
	}
	return 0
}

func (x *MarketData) GetPercentageChange() float32 {
	if x != nil {
		return x.PercentageChange
	}
	return 0
}

func (x *MarketData) GetScalingFactor() int32 {
	if x != nil {
		return x.ScalingFactor
	}
	return 0
}

func (x *MarketData) GetStreamingPricesAvailable() bool {
	if x != nil {
		return x.StreamingPricesAvailable
	}
	return false
}

func (x *MarketData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MarketData) GetUpdateTimeUTC() string {
	if x != nil {
		return x.UpdateTimeUTC
	}
	return ""
}

// ClientSentimentRequest - Response for client sentiment
type ClientSentimentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketId string `protobuf:"bytes,1,opt,name=marketId,proto3" json:"marketId,omitempty"`
}

func (x *ClientSentimentRequest) Reset() {
	*x = ClientSentimentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSentimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSentimentRequest) ProtoMessage() {}

func (x *ClientSentimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSentimentRequest.ProtoReflect.Descriptor instead.
func (*ClientSentimentRequest) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{10}
}

func (x *ClientSentimentRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// ClientSentimentResponse - Response for client sentiment
type ClientSentimentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongPositionPercentage  float32 `protobuf:"fixed32,1,opt,name=longPositionPercentage,proto3" json:"longPositionPercentage,omitempty"`
	ShortPositionPercentage float32 `protobuf:"fixed32,2,opt,name=shortPositionPercentage,proto3" json:"shortPositionPercentage,omitempty"`
}

func (x *ClientSentimentResponse) Reset() {
	*x = ClientSentimentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSentimentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSentimentResponse) ProtoMessage() {}

func (x *ClientSentimentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSentimentResponse.ProtoReflect.Descriptor instead.
func (*ClientSentimentResponse) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{11}
}

func (x *ClientSentimentResponse) GetLongPositionPercentage() float32 {
	if x != nil {
		return x.LongPositionPercentage
	}
	return 0
}

func (x *ClientSentimentResponse) GetShortPositionPercentage() float32 {
	if x != nil {
		return x.ShortPositionPercentage
	}
	return 0
}

// LightStreamerSubRequest - Response for client sentiment
type LightStreamerSubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketId string `protobuf:"bytes,1,opt,name=marketId,proto3" json:"marketId,omitempty"`
}

func (x *LightStreamerSubRequest) Reset() {
	*x = LightStreamerSubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightStreamerSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightStreamerSubRequest) ProtoMessage() {}

func (x *LightStreamerSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightStreamerSubRequest.ProtoReflect.Descriptor instead.
func (*LightStreamerSubRequest) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{12}
}

func (x *LightStreamerSubRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// LightStreamerSubResponse - Response for client sentiment
type LightStreamerSubResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketId string  `protobuf:"bytes,1,opt,name=marketId,proto3" json:"marketId,omitempty"`
	Time     int32   `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Bid      float32 `protobuf:"fixed32,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask      float32 `protobuf:"fixed32,4,opt,name=ask,proto3" json:"ask,omitempty"`
}

func (x *LightStreamerSubResponse) Reset() {
	*x = LightStreamerSubResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gmailapi_gmailapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightStreamerSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightStreamerSubResponse) ProtoMessage() {}

func (x *LightStreamerSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gmailapi_gmailapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightStreamerSubResponse.ProtoReflect.Descriptor instead.
func (*LightStreamerSubResponse) Descriptor() ([]byte, []int) {
	return file_gmailapi_gmailapi_proto_rawDescGZIP(), []int{13}
}

func (x *LightStreamerSubResponse) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *LightStreamerSubResponse) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *LightStreamerSubResponse) GetBid() float32 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *LightStreamerSubResponse) GetAsk() float32 {
	if x != nil {
		return x.Ask
	}
	return 0
}

var File_gmailapi_gmailapi_proto protoreflect.FileDescriptor

var file_gmailapi_gmailapi_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6d, 0x61, 0x69, 0x6c,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6d, 0x61, 0x69, 0x6c,
	0x61, 0x70, 0x69, 0x22, 0x88, 0x01, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a,
	0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xd1, 0x04, 0x0a, 0x0f, 0x4f,
	0x54, 0x43, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x70,
	0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x53, 0x74,
	0x6f, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x61, 0x6c,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x2c,
	0x0a, 0x10, 0x4f, 0x54, 0x43, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x22, 0xbc, 0x01, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x46, 0x0a, 0x11, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x71, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x03, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x69, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x69, 0x73, 0x6b, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x55, 0x54, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x55, 0x54, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x12, 0x32, 0x0a,
	0x14, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x4c, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xc4, 0x04, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x62, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x70,
	0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x26,
	0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x54,
	0x43, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x55, 0x54, 0x43, 0x22, 0x34, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a,
	0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x6f, 0x6e, 0x67,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x6c, 0x6f, 0x6e, 0x67, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x17, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x17, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x6e, 0x0a, 0x18, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x61, 0x73,
	0x6b, 0x32, 0x93, 0x04, 0x0a, 0x0b, 0x47, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x53, 0x76,
	0x63, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f,
	0x4d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x4f, 0x54, 0x43, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4f,
	0x54, 0x43, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x43, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x67, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x54, 0x43, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x1e, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x1d, 0x6f,
	0x70, 0x65, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x67,
	0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x50, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x20, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x69, 0x71, 0x72, 0x61, 0x6d, 0x2f, 0x49, 0x47, 0x2d,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2d, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6d, 0x61,
	0x69, 0x6c, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gmailapi_gmailapi_proto_rawDescOnce sync.Once
	file_gmailapi_gmailapi_proto_rawDescData = file_gmailapi_gmailapi_proto_rawDesc
)

func file_gmailapi_gmailapi_proto_rawDescGZIP() []byte {
	file_gmailapi_gmailapi_proto_rawDescOnce.Do(func() {
		file_gmailapi_gmailapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_gmailapi_gmailapi_proto_rawDescData)
	})
	return file_gmailapi_gmailapi_proto_rawDescData
}

var file_gmailapi_gmailapi_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_gmailapi_gmailapi_proto_goTypes = []interface{}{
	(*SubscriptionRequest)(nil),      // 0: gmailapi.SubscriptionRequest
	(*SubscriptionResponse)(nil),     // 1: gmailapi.SubscriptionResponse
	(*OTCOrderRequest)(nil),          // 2: gmailapi.OTCOrderRequest
	(*OTCOrderResponse)(nil),         // 3: gmailapi.OTCOrderResponse
	(*ConfirmationResponse)(nil),     // 4: gmailapi.ConfirmationResponse
	(*PositionsResponse)(nil),        // 5: gmailapi.PositionsResponse
	(*Positions)(nil),                // 6: gmailapi.Positions
	(*Position)(nil),                 // 7: gmailapi.Position
	(*MarketSearchResponse)(nil),     // 8: gmailapi.MarketSearchResponse
	(*MarketData)(nil),               // 9: gmailapi.MarketData
	(*ClientSentimentRequest)(nil),   // 10: gmailapi.ClientSentimentRequest
	(*ClientSentimentResponse)(nil),  // 11: gmailapi.ClientSentimentResponse
	(*LightStreamerSubRequest)(nil),  // 12: gmailapi.LightStreamerSubRequest
	(*LightStreamerSubResponse)(nil), // 13: gmailapi.LightStreamerSubResponse
}
var file_gmailapi_gmailapi_proto_depIdxs = []int32{
	6,  // 0: gmailapi.PositionsResponse.positions:type_name -> gmailapi.Positions
	9,  // 1: gmailapi.Positions.marketData:type_name -> gmailapi.MarketData
	7,  // 2: gmailapi.Positions.position:type_name -> gmailapi.Position
	9,  // 3: gmailapi.MarketSearchResponse.marketData:type_name -> gmailapi.MarketData
	0,  // 4: gmailapi.GmailapiSvc.subscribeToMail:input_type -> gmailapi.SubscriptionRequest
	2,  // 5: gmailapi.GmailapiSvc.openOTCOrder:input_type -> gmailapi.OTCOrderRequest
	3,  // 6: gmailapi.GmailapiSvc.getConfirmationDetails:input_type -> gmailapi.OTCOrderResponse
	10, // 7: gmailapi.GmailapiSvc.getClientSentiment:input_type -> gmailapi.ClientSentimentRequest
	12, // 8: gmailapi.GmailapiSvc.openLightStreamerSubscription:input_type -> gmailapi.LightStreamerSubRequest
	10, // 9: gmailapi.GmailapiSvc.marketSearch:input_type -> gmailapi.ClientSentimentRequest
	1,  // 10: gmailapi.GmailapiSvc.subscribeToMail:output_type -> gmailapi.SubscriptionResponse
	3,  // 11: gmailapi.GmailapiSvc.openOTCOrder:output_type -> gmailapi.OTCOrderResponse
	4,  // 12: gmailapi.GmailapiSvc.getConfirmationDetails:output_type -> gmailapi.ConfirmationResponse
	11, // 13: gmailapi.GmailapiSvc.getClientSentiment:output_type -> gmailapi.ClientSentimentResponse
	13, // 14: gmailapi.GmailapiSvc.openLightStreamerSubscription:output_type -> gmailapi.LightStreamerSubResponse
	8,  // 15: gmailapi.GmailapiSvc.marketSearch:output_type -> gmailapi.MarketSearchResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_gmailapi_gmailapi_proto_init() }
func file_gmailapi_gmailapi_proto_init() {
	if File_gmailapi_gmailapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gmailapi_gmailapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTCOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTCOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Positions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSentimentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSentimentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightStreamerSubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gmailapi_gmailapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightStreamerSubResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gmailapi_gmailapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gmailapi_gmailapi_proto_goTypes,
		DependencyIndexes: file_gmailapi_gmailapi_proto_depIdxs,
		MessageInfos:      file_gmailapi_gmailapi_proto_msgTypes,
	}.Build()
	File_gmailapi_gmailapi_proto = out.File
	file_gmailapi_gmailapi_proto_rawDesc = nil
	file_gmailapi_gmailapi_proto_goTypes = nil
	file_gmailapi_gmailapi_proto_depIdxs = nil
}
