// source: notificationservice/notificationservice.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.notificationservice.ClientSentimentRequest', null, global);
goog.exportSymbol('proto.notificationservice.ClientSentimentResponse', null, global);
goog.exportSymbol('proto.notificationservice.ConfirmationResponse', null, global);
goog.exportSymbol('proto.notificationservice.LightStreamerSubRequest', null, global);
goog.exportSymbol('proto.notificationservice.LightStreamerSubResponse', null, global);
goog.exportSymbol('proto.notificationservice.MarketData', null, global);
goog.exportSymbol('proto.notificationservice.OTCOrderRequest', null, global);
goog.exportSymbol('proto.notificationservice.OTCOrderResponse', null, global);
goog.exportSymbol('proto.notificationservice.Position', null, global);
goog.exportSymbol('proto.notificationservice.Positions', null, global);
goog.exportSymbol('proto.notificationservice.PositionsResponse', null, global);
goog.exportSymbol('proto.notificationservice.SubscriptionRequest', null, global);
goog.exportSymbol('proto.notificationservice.SubscriptionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.SubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.SubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.SubscriptionRequest.displayName = 'proto.notificationservice.SubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.SubscriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.SubscriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.SubscriptionResponse.displayName = 'proto.notificationservice.SubscriptionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.OTCOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.OTCOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.OTCOrderRequest.displayName = 'proto.notificationservice.OTCOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.OTCOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.OTCOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.OTCOrderResponse.displayName = 'proto.notificationservice.OTCOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.ConfirmationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.ConfirmationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.ConfirmationResponse.displayName = 'proto.notificationservice.ConfirmationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.PositionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gmailapi.PositionsResponse.repeatedFields_, null);
};
goog.inherits(proto.gmailapi.PositionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.PositionsResponse.displayName = 'proto.notificationservice.PositionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.Positions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.Positions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.Positions.displayName = 'proto.notificationservice.Positions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.Position.displayName = 'proto.notificationservice.Position';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.MarketData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.MarketData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.MarketData.displayName = 'proto.notificationservice.MarketData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.ClientSentimentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.ClientSentimentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.ClientSentimentRequest.displayName = 'proto.notificationservice.ClientSentimentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.ClientSentimentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.ClientSentimentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.ClientSentimentResponse.displayName = 'proto.notificationservice.ClientSentimentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.LightStreamerSubRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.LightStreamerSubRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.LightStreamerSubRequest.displayName = 'proto.notificationservice.LightStreamerSubRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmailapi.LightStreamerSubResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmailapi.LightStreamerSubResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gmailapi.LightStreamerSubResponse.displayName = 'proto.notificationservice.LightStreamerSubResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.SubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.SubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.SubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.SubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    topicname: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.SubscriptionRequest}
 */
proto.gmailapi.SubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.SubscriptionRequest;
  return proto.gmailapi.SubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.SubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.SubscriptionRequest}
 */
proto.gmailapi.SubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopicname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.SubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.SubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.SubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.SubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTopicname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string email_id = 1;
 * @return {string}
 */
proto.gmailapi.SubscriptionRequest.prototype.getEmailId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.SubscriptionRequest} returns this
 */
proto.gmailapi.SubscriptionRequest.prototype.setEmailId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string labelName = 2;
 * @return {string}
 */
proto.gmailapi.SubscriptionRequest.prototype.getLabelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.SubscriptionRequest} returns this
 */
proto.gmailapi.SubscriptionRequest.prototype.setLabelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string topicName = 3;
 * @return {string}
 */
proto.gmailapi.SubscriptionRequest.prototype.getTopicname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.SubscriptionRequest} returns this
 */
proto.gmailapi.SubscriptionRequest.prototype.setTopicname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.SubscriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.SubscriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.SubscriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.SubscriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    historyid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.SubscriptionResponse}
 */
proto.gmailapi.SubscriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.SubscriptionResponse;
  return proto.gmailapi.SubscriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.SubscriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.SubscriptionResponse}
 */
proto.gmailapi.SubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHistoryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.SubscriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.SubscriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.SubscriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.SubscriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHistoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string transactionId = 1;
 * @return {string}
 */
proto.gmailapi.SubscriptionResponse.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.SubscriptionResponse} returns this
 */
proto.gmailapi.SubscriptionResponse.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string historyId = 2;
 * @return {string}
 */
proto.gmailapi.SubscriptionResponse.prototype.getHistoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.SubscriptionResponse} returns this
 */
proto.gmailapi.SubscriptionResponse.prototype.setHistoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.OTCOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.OTCOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.OTCOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.OTCOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    epic: jspb.Message.getFieldWithDefault(msg, 1, ""),
    level: jspb.Message.getFieldWithDefault(msg, 2, ""),
    forceopen: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    ordertype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currencycode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 6, ""),
    expiry: jspb.Message.getFieldWithDefault(msg, 7, ""),
    size: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    stopdistance: jspb.Message.getFieldWithDefault(msg, 9, ""),
    stoplevel: jspb.Message.getFieldWithDefault(msg, 10, ""),
    limitdistance: jspb.Message.getFieldWithDefault(msg, 11, ""),
    limitlevel: jspb.Message.getFieldWithDefault(msg, 12, ""),
    quoteid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    timeinforce: jspb.Message.getFieldWithDefault(msg, 14, ""),
    trailingstop: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    trailingstopincrement: jspb.Message.getFieldWithDefault(msg, 16, ""),
    guaranteedstop: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    dealreference: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.OTCOrderRequest}
 */
proto.gmailapi.OTCOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.OTCOrderRequest;
  return proto.gmailapi.OTCOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.OTCOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.OTCOrderRequest}
 */
proto.gmailapi.OTCOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpic(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceopen(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdertype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiry(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSize(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStopdistance(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoplevel(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLimitdistance(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLimitlevel(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeinforce(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrailingstop(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrailingstopincrement(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGuaranteedstop(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDealreference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.OTCOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.OTCOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.OTCOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.OTCOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpic();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getForceopen();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getOrdertype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExpiry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getStopdistance();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStoplevel();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLimitdistance();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLimitlevel();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getQuoteid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTimeinforce();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getTrailingstop();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getTrailingstopincrement();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getGuaranteedstop();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getDealreference();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional string epic = 1;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getEpic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setEpic = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string level = 2;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool forceOpen = 3;
 * @return {boolean}
 */
proto.gmailapi.OTCOrderRequest.prototype.getForceopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setForceopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string orderType = 4;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getOrdertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setOrdertype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string currencyCode = 5;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setCurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string direction = 6;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string expiry = 7;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getExpiry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional float size = 8;
 * @return {number}
 */
proto.gmailapi.OTCOrderRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string stopDistance = 9;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getStopdistance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setStopdistance = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string stopLevel = 10;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getStoplevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setStoplevel = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string limitDistance = 11;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getLimitdistance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setLimitdistance = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string limitLevel = 12;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getLimitlevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setLimitlevel = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string quoteId = 13;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getQuoteid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setQuoteid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string timeInForce = 14;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getTimeinforce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setTimeinforce = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool trailingStop = 15;
 * @return {boolean}
 */
proto.gmailapi.OTCOrderRequest.prototype.getTrailingstop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setTrailingstop = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string trailingStopIncrement = 16;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getTrailingstopincrement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setTrailingstopincrement = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool guaranteedStop = 17;
 * @return {boolean}
 */
proto.gmailapi.OTCOrderRequest.prototype.getGuaranteedstop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setGuaranteedstop = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional string dealReference = 19;
 * @return {string}
 */
proto.gmailapi.OTCOrderRequest.prototype.getDealreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderRequest} returns this
 */
proto.gmailapi.OTCOrderRequest.prototype.setDealreference = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.OTCOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.OTCOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.OTCOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.OTCOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.OTCOrderResponse}
 */
proto.gmailapi.OTCOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.OTCOrderResponse;
  return proto.gmailapi.OTCOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.OTCOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.OTCOrderResponse}
 */
proto.gmailapi.OTCOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDealref(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.OTCOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.OTCOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.OTCOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.OTCOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealref();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dealRef = 1;
 * @return {string}
 */
proto.gmailapi.OTCOrderResponse.prototype.getDealref = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.OTCOrderResponse} returns this
 */
proto.gmailapi.OTCOrderResponse.prototype.setDealref = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.ConfirmationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.ConfirmationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.ConfirmationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.ConfirmationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealstatus: jspb.Message.getFieldWithDefault(msg, 2, ""),
    profit: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    profitcurrency: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 6, ""),
    level: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.ConfirmationResponse}
 */
proto.gmailapi.ConfirmationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.ConfirmationResponse;
  return proto.gmailapi.ConfirmationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.ConfirmationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.ConfirmationResponse}
 */
proto.gmailapi.ConfirmationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDealstatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setProfit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfitcurrency(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.ConfirmationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.ConfirmationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.ConfirmationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.ConfirmationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealstatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getProfitcurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
};


/**
 * optional string dealStatus = 2;
 * @return {string}
 */
proto.gmailapi.ConfirmationResponse.prototype.getDealstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.ConfirmationResponse} returns this
 */
proto.gmailapi.ConfirmationResponse.prototype.setDealstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float profit = 3;
 * @return {number}
 */
proto.gmailapi.ConfirmationResponse.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.ConfirmationResponse} returns this
 */
proto.gmailapi.ConfirmationResponse.prototype.setProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string profitCurrency = 4;
 * @return {string}
 */
proto.gmailapi.ConfirmationResponse.prototype.getProfitcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.ConfirmationResponse} returns this
 */
proto.gmailapi.ConfirmationResponse.prototype.setProfitcurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.gmailapi.ConfirmationResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.ConfirmationResponse} returns this
 */
proto.gmailapi.ConfirmationResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string reason = 6;
 * @return {string}
 */
proto.gmailapi.ConfirmationResponse.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.ConfirmationResponse} returns this
 */
proto.gmailapi.ConfirmationResponse.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional float level = 7;
 * @return {number}
 */
proto.gmailapi.ConfirmationResponse.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.ConfirmationResponse} returns this
 */
proto.gmailapi.ConfirmationResponse.prototype.setLevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gmailapi.PositionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.PositionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.PositionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.PositionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.PositionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.gmailapi.Positions.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.PositionsResponse}
 */
proto.gmailapi.PositionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.PositionsResponse;
  return proto.gmailapi.PositionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.PositionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.PositionsResponse}
 */
proto.gmailapi.PositionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gmailapi.Positions;
      reader.readMessage(value,proto.gmailapi.Positions.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.PositionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.PositionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.PositionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.PositionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gmailapi.Positions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Positions positions = 1;
 * @return {!Array<!proto.gmailapi.Positions>}
 */
proto.gmailapi.PositionsResponse.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.gmailapi.Positions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gmailapi.Positions, 1));
};


/**
 * @param {!Array<!proto.gmailapi.Positions>} value
 * @return {!proto.gmailapi.PositionsResponse} returns this
*/
proto.gmailapi.PositionsResponse.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gmailapi.Positions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gmailapi.Positions}
 */
proto.gmailapi.PositionsResponse.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gmailapi.Positions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gmailapi.PositionsResponse} returns this
 */
proto.gmailapi.PositionsResponse.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.Positions.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.Positions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.Positions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.Positions.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketdata: (f = msg.getMarketdata()) && proto.gmailapi.MarketData.toObject(includeInstance, f),
    position: (f = msg.getPosition()) && proto.gmailapi.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.Positions}
 */
proto.gmailapi.Positions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.Positions;
  return proto.gmailapi.Positions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.Positions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.Positions}
 */
proto.gmailapi.Positions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gmailapi.MarketData;
      reader.readMessage(value,proto.gmailapi.MarketData.deserializeBinaryFromReader);
      msg.setMarketdata(value);
      break;
    case 2:
      var value = new proto.gmailapi.Position;
      reader.readMessage(value,proto.gmailapi.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.Positions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.Positions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.Positions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.Positions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gmailapi.MarketData.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmailapi.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional MarketData marketData = 1;
 * @return {?proto.gmailapi.MarketData}
 */
proto.gmailapi.Positions.prototype.getMarketdata = function() {
  return /** @type{?proto.gmailapi.MarketData} */ (
    jspb.Message.getWrapperField(this, proto.gmailapi.MarketData, 1));
};


/**
 * @param {?proto.gmailapi.MarketData|undefined} value
 * @return {!proto.gmailapi.Positions} returns this
*/
proto.gmailapi.Positions.prototype.setMarketdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gmailapi.Positions} returns this
 */
proto.gmailapi.Positions.prototype.clearMarketdata = function() {
  return this.setMarketdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gmailapi.Positions.prototype.hasMarketdata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Position position = 2;
 * @return {?proto.gmailapi.Position}
 */
proto.gmailapi.Positions.prototype.getPosition = function() {
  return /** @type{?proto.gmailapi.Position} */ (
    jspb.Message.getWrapperField(this, proto.gmailapi.Position, 2));
};


/**
 * @param {?proto.gmailapi.Position|undefined} value
 * @return {!proto.gmailapi.Positions} returns this
*/
proto.gmailapi.Positions.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gmailapi.Positions} returns this
 */
proto.gmailapi.Positions.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gmailapi.Positions.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractsize: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    controlledrisk: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    createddate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createddateutc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dealid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dealreference: jspb.Message.getFieldWithDefault(msg, 7, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 8, ""),
    level: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    limitlevel: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    size: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    stoplevel: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    trailingstep: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    trailingstopdistance: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.Position}
 */
proto.gmailapi.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.Position;
  return proto.gmailapi.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.Position}
 */
proto.gmailapi.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setContractsize(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setControlledrisk(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateddate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateddateutc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDealid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDealreference(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLimitlevel(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSize(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStoplevel(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTrailingstep(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTrailingstopdistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractsize();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getControlledrisk();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCreateddate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreateddateutc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDealid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDealreference();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getLimitlevel();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getStoplevel();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getTrailingstep();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getTrailingstopdistance();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
};


/**
 * optional float contractSize = 1;
 * @return {number}
 */
proto.gmailapi.Position.prototype.getContractsize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setContractsize = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional bool controlledRisk = 2;
 * @return {boolean}
 */
proto.gmailapi.Position.prototype.getControlledrisk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setControlledrisk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string createdDate = 3;
 * @return {string}
 */
proto.gmailapi.Position.prototype.getCreateddate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setCreateddate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string createdDateUTC = 4;
 * @return {string}
 */
proto.gmailapi.Position.prototype.getCreateddateutc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setCreateddateutc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.gmailapi.Position.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string dealID = 6;
 * @return {string}
 */
proto.gmailapi.Position.prototype.getDealid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setDealid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string dealReference = 7;
 * @return {string}
 */
proto.gmailapi.Position.prototype.getDealreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setDealreference = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string direction = 8;
 * @return {string}
 */
proto.gmailapi.Position.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float level = 9;
 * @return {number}
 */
proto.gmailapi.Position.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setLevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float limitLevel = 10;
 * @return {number}
 */
proto.gmailapi.Position.prototype.getLimitlevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setLimitlevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float size = 11;
 * @return {number}
 */
proto.gmailapi.Position.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float stopLevel = 12;
 * @return {number}
 */
proto.gmailapi.Position.prototype.getStoplevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setStoplevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float trailingStep = 13;
 * @return {number}
 */
proto.gmailapi.Position.prototype.getTrailingstep = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setTrailingstep = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float trailingStopDistance = 14;
 * @return {number}
 */
proto.gmailapi.Position.prototype.getTrailingstopdistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.Position} returns this
 */
proto.gmailapi.Position.prototype.setTrailingstopdistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.MarketData.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.MarketData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.MarketData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.MarketData.toObject = function(includeInstance, msg) {
  var f, obj = {
    bid: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    delaytime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    epic: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exchangeid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    expiry: jspb.Message.getFieldWithDefault(msg, 5, ""),
    high: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    instrumentname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    instrumenttype: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lotsize: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    low: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    marketstatus: jspb.Message.getFieldWithDefault(msg, 11, ""),
    netchange: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    offer: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    percentagechange: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    scalingfactor: jspb.Message.getFieldWithDefault(msg, 15, 0),
    streamingpricesavailable: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    updatetime: jspb.Message.getFieldWithDefault(msg, 17, ""),
    updatetimeutc: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.MarketData}
 */
proto.gmailapi.MarketData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.MarketData;
  return proto.gmailapi.MarketData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.MarketData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.MarketData}
 */
proto.gmailapi.MarketData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDelaytime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpic(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiry(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHigh(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstrumentname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstrumenttype(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLotsize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLow(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketstatus(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNetchange(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffer(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPercentagechange(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScalingfactor(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStreamingpricesavailable(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatetime(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatetimeutc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.MarketData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.MarketData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.MarketData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.MarketData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBid();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getDelaytime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEpic();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExchangeid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExpiry();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHigh();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getInstrumentname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInstrumenttype();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLotsize();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getLow();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getMarketstatus();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getNetchange();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getOffer();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getPercentagechange();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getScalingfactor();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getStreamingpricesavailable();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getUpdatetime();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getUpdatetimeutc();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional float bid = 1;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getBid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setBid = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int64 delayTime = 2;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getDelaytime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setDelaytime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string epic = 3;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getEpic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setEpic = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string exchangeId = 4;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getExchangeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setExchangeid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string expiry = 5;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getExpiry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float high = 6;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getHigh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setHigh = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string instrumentName = 7;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getInstrumentname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setInstrumentname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string instrumentType = 8;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getInstrumenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setInstrumenttype = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float lotSize = 9;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getLotsize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setLotsize = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float low = 10;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setLow = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string marketStatus = 11;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getMarketstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setMarketstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional float netChange = 12;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getNetchange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setNetchange = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float offer = 13;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getOffer = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setOffer = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float percentageChange = 14;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getPercentagechange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setPercentagechange = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional int32 scalingFactor = 15;
 * @return {number}
 */
proto.gmailapi.MarketData.prototype.getScalingfactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setScalingfactor = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool streamingPricesAvailable = 16;
 * @return {boolean}
 */
proto.gmailapi.MarketData.prototype.getStreamingpricesavailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setStreamingpricesavailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string updateTime = 17;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getUpdatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setUpdatetime = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string updateTimeUTC = 18;
 * @return {string}
 */
proto.gmailapi.MarketData.prototype.getUpdatetimeutc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.MarketData} returns this
 */
proto.gmailapi.MarketData.prototype.setUpdatetimeutc = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.ClientSentimentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.ClientSentimentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.ClientSentimentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.ClientSentimentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.ClientSentimentRequest}
 */
proto.gmailapi.ClientSentimentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.ClientSentimentRequest;
  return proto.gmailapi.ClientSentimentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.ClientSentimentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.ClientSentimentRequest}
 */
proto.gmailapi.ClientSentimentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.ClientSentimentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.ClientSentimentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.ClientSentimentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.ClientSentimentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string marketId = 1;
 * @return {string}
 */
proto.gmailapi.ClientSentimentRequest.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.ClientSentimentRequest} returns this
 */
proto.gmailapi.ClientSentimentRequest.prototype.setMarketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.ClientSentimentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.ClientSentimentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.ClientSentimentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.ClientSentimentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    longpositionpercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    shortpositionpercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.ClientSentimentResponse}
 */
proto.gmailapi.ClientSentimentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.ClientSentimentResponse;
  return proto.gmailapi.ClientSentimentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.ClientSentimentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.ClientSentimentResponse}
 */
proto.gmailapi.ClientSentimentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLongpositionpercentage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShortpositionpercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.ClientSentimentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.ClientSentimentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.ClientSentimentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.ClientSentimentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLongpositionpercentage();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getShortpositionpercentage();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float longPositionPercentage = 1;
 * @return {number}
 */
proto.gmailapi.ClientSentimentResponse.prototype.getLongpositionpercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.ClientSentimentResponse} returns this
 */
proto.gmailapi.ClientSentimentResponse.prototype.setLongpositionpercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float shortPositionPercentage = 2;
 * @return {number}
 */
proto.gmailapi.ClientSentimentResponse.prototype.getShortpositionpercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.ClientSentimentResponse} returns this
 */
proto.gmailapi.ClientSentimentResponse.prototype.setShortpositionpercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.LightStreamerSubRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.LightStreamerSubRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.LightStreamerSubRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.LightStreamerSubRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.LightStreamerSubRequest}
 */
proto.gmailapi.LightStreamerSubRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.LightStreamerSubRequest;
  return proto.gmailapi.LightStreamerSubRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.LightStreamerSubRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.LightStreamerSubRequest}
 */
proto.gmailapi.LightStreamerSubRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.LightStreamerSubRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.LightStreamerSubRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.LightStreamerSubRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.LightStreamerSubRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string marketId = 1;
 * @return {string}
 */
proto.gmailapi.LightStreamerSubRequest.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.LightStreamerSubRequest} returns this
 */
proto.gmailapi.LightStreamerSubRequest.prototype.setMarketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmailapi.LightStreamerSubResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gmailapi.LightStreamerSubResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmailapi.LightStreamerSubResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.LightStreamerSubResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bid: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    ask: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmailapi.LightStreamerSubResponse}
 */
proto.gmailapi.LightStreamerSubResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmailapi.LightStreamerSubResponse;
  return proto.gmailapi.LightStreamerSubResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmailapi.LightStreamerSubResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmailapi.LightStreamerSubResponse}
 */
proto.gmailapi.LightStreamerSubResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAsk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmailapi.LightStreamerSubResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gmailapi.LightStreamerSubResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gmailapi.LightStreamerSubResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gmailapi.LightStreamerSubResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBid();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getAsk();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional string marketId = 1;
 * @return {string}
 */
proto.gmailapi.LightStreamerSubResponse.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gmailapi.LightStreamerSubResponse} returns this
 */
proto.gmailapi.LightStreamerSubResponse.prototype.setMarketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 time = 2;
 * @return {number}
 */
proto.gmailapi.LightStreamerSubResponse.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.LightStreamerSubResponse} returns this
 */
proto.gmailapi.LightStreamerSubResponse.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional float bid = 3;
 * @return {number}
 */
proto.gmailapi.LightStreamerSubResponse.prototype.getBid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.LightStreamerSubResponse} returns this
 */
proto.gmailapi.LightStreamerSubResponse.prototype.setBid = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float ask = 4;
 * @return {number}
 */
proto.gmailapi.LightStreamerSubResponse.prototype.getAsk = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gmailapi.LightStreamerSubResponse} returns this
 */
proto.gmailapi.LightStreamerSubResponse.prototype.setAsk = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


goog.object.extend(exports, proto.gmailapi);
